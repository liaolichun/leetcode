int uniquePathsWithObstacles(int** obstacleGrid, int obstacleGridRowSize, int obstacleGridColSize) 
{
    int i,j,res;
    int *dp;
    dp = (int*)malloc(sizeof(int)*obstacleGridRowSize*obstacleGridColSize);
    if(obstacleGrid[0][0] == 1)
        return 0;
    dp[0*obstacleGridColSize+0] = 1;
    //init first row
    for (j = 1;j<obstacleGridColSize;j++)
        if(obstacleGrid[0][j]==1)
            dp[0*obstacleGridColSize+j] = 0;
        else
            dp[0*obstacleGridColSize+j] = dp[0*obstacleGridColSize+j-1];
    //init first col
     for (i = 1;i<obstacleGridRowSize;i++)
        if(obstacleGrid[i][0]==1)
            dp[i*obstacleGridColSize+0] = 0;
        else
            dp[i*obstacleGridColSize+0] = dp[(i-1)*obstacleGridColSize+0];
    
    for(i=1;i<obstacleGridRowSize;i++)
        for(j=1;j<obstacleGridColSize;j++)
            if(obstacleGrid[i][j]==1)
                dp[i*obstacleGridColSize+j] = 0;
            else
                dp[i*obstacleGridColSize+j] = dp[(i-1)*obstacleGridColSize+j]+dp[i*obstacleGridColSize+j-1];
    res = dp[obstacleGridRowSize*obstacleGridColSize-1];
    free(dp);
    return res; 
}
